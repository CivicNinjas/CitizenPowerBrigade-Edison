var connect_string, express, pg, router;

express = require("express");

pg = require("pg");

router = express.Router();

connect_string = "postgres://hfazwccgnyzwtv:HW-RUQUl0g2wb8Gl9Nk6OenOs6@ec2-50-19-236-178.compute-1.amazonaws.com:5432/d3vs9ut8e9j6bh";

router.post("/:id", function(req, res) {
  var body, id;
  id = req.params.id;
  body = req.body;
  return pg.connect(connect_string, function(err, client, done) {
    return client.query('INSERT into raw_reports (id, blob) VALUES("' + id + '", "' + body + '")');
  });
});

router.get("/all", function(req, res) {
  return db.unprocessed(res);
});

router.get('/db', function(request, response) {
  return pg.connect(connect_string, function(err, client, done) {
    return client.query('SELECT * FROM raw_reports', function(err, result) {
      done();
      if (err) {
        console.error(err);
        return response.send("Error " + err);
      } else {
        return response.send(result.rows);
      }
    });
  });
});

module.exports = router;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsbUNBQUE7O0FBQUEsT0FBQSxHQUFVLE9BQUEsQ0FBUSxTQUFSLENBQVYsQ0FBQTs7QUFBQSxFQUNBLEdBQUssT0FBQSxDQUFRLElBQVIsQ0FETCxDQUFBOztBQUFBLE1BRUEsR0FBUyxPQUFPLENBQUMsTUFBUixDQUFBLENBRlQsQ0FBQTs7QUFBQSxjQUdBLEdBQWlCLG9IQUhqQixDQUFBOztBQUFBLE1BS00sQ0FBQyxJQUFQLENBQVksTUFBWixFQUFvQixTQUFDLEdBQUQsRUFBTSxHQUFOLEdBQUE7QUFDbEIsTUFBQSxRQUFBO0FBQUEsRUFBQSxFQUFBLEdBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFoQixDQUFBO0FBQUEsRUFDQSxJQUFBLEdBQU8sR0FBRyxDQUFDLElBRFgsQ0FBQTtTQUVBLEVBQUUsQ0FBQyxPQUFILENBQVcsY0FBWCxFQUEyQixTQUFDLEdBQUQsRUFBTSxNQUFOLEVBQWMsSUFBZCxHQUFBO1dBQ3pCLE1BQU0sQ0FBQyxLQUFQLENBQWEsNkNBQUEsR0FBOEMsRUFBOUMsR0FBaUQsTUFBakQsR0FBd0QsSUFBeEQsR0FBNkQsSUFBMUUsRUFEeUI7RUFBQSxDQUEzQixFQUhrQjtBQUFBLENBQXBCLENBTEEsQ0FBQTs7QUFBQSxNQVdNLENBQUMsR0FBUCxDQUFXLE1BQVgsRUFBbUIsU0FBQyxHQUFELEVBQU0sR0FBTixHQUFBO1NBQ2xCLEVBQUUsQ0FBQyxXQUFILENBQWUsR0FBZixFQURrQjtBQUFBLENBQW5CLENBWEEsQ0FBQTs7QUFBQSxNQWVNLENBQUMsR0FBUCxDQUFXLEtBQVgsRUFBbUIsU0FBQyxPQUFELEVBQVUsUUFBVixHQUFBO1NBQ2pCLEVBQUUsQ0FBQyxPQUFILENBQVcsY0FBWCxFQUEyQixTQUFDLEdBQUQsRUFBTSxNQUFOLEVBQWMsSUFBZCxHQUFBO1dBQ3pCLE1BQU0sQ0FBQyxLQUFQLENBQWEsMkJBQWIsRUFBMEMsU0FBQyxHQUFELEVBQU0sTUFBTixHQUFBO0FBQ3hDLE1BQUEsSUFBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsSUFBSSxHQUFKO0FBQ0UsUUFBQSxPQUFPLENBQUMsS0FBUixDQUFjLEdBQWQsQ0FBQSxDQUFBO2VBQ0EsUUFBUSxDQUFDLElBQVQsQ0FBYyxRQUFBLEdBQVcsR0FBekIsRUFGRjtPQUFBLE1BQUE7ZUFJRSxRQUFRLENBQUMsSUFBVCxDQUFjLE1BQU0sQ0FBQyxJQUFyQixFQUpGO09BRndDO0lBQUEsQ0FBMUMsRUFEeUI7RUFBQSxDQUEzQixFQURpQjtBQUFBLENBQW5CLENBZkEsQ0FBQTs7QUFBQSxNQXlCTSxDQUFDLE9BQVAsR0FBaUIsTUF6QmpCLENBQUEiLCJmaWxlIjoidW5pdC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKVxucGcgPSByZXF1aXJlKFwicGdcIilcbnJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbmNvbm5lY3Rfc3RyaW5nID0gXCJwb3N0Z3JlczovL2hmYXp3Y2Nnbnl6d3R2OkhXLVJVUVVsMGcyd2I4R2w5Tms2T2VuT3M2QGVjMi01MC0xOS0yMzYtMTc4LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tOjU0MzIvZDN2czl1dDhlOWo2YmhcIlxuXG5yb3V0ZXIucG9zdCBcIi86aWRcIiwgKHJlcSwgcmVzKSAtPlxuICBpZCA9IHJlcS5wYXJhbXMuaWRcbiAgYm9keSA9IHJlcS5ib2R5XG4gIHBnLmNvbm5lY3QgY29ubmVjdF9zdHJpbmcsIChlcnIsIGNsaWVudCwgZG9uZSktPlxuICAgIGNsaWVudC5xdWVyeSgnSU5TRVJUIGludG8gcmF3X3JlcG9ydHMgKGlkLCBibG9iKSBWQUxVRVMoXCInK2lkKydcIiwgXCInK2JvZHkrJ1wiKScpXG5cdFxucm91dGVyLmdldCBcIi9hbGxcIiwgKHJlcSwgcmVzKSAtPlxuXHRkYi51bnByb2Nlc3NlZCByZXNcblxuXG5yb3V0ZXIuZ2V0ICcvZGInLCAgKHJlcXVlc3QsIHJlc3BvbnNlKSAtPlxuICBwZy5jb25uZWN0IGNvbm5lY3Rfc3RyaW5nLCAoZXJyLCBjbGllbnQsIGRvbmUpIC0+XG4gICAgY2xpZW50LnF1ZXJ5ICdTRUxFQ1QgKiBGUk9NIHJhd19yZXBvcnRzJywgKGVyciwgcmVzdWx0KSAtPlxuICAgICAgZG9uZSgpXG4gICAgICBpZiAoZXJyKVxuICAgICAgICBjb25zb2xlLmVycm9yKGVycilcbiAgICAgICAgcmVzcG9uc2Uuc2VuZChcIkVycm9yIFwiICsgZXJyKVxuICAgICAgZWxzZVxuICAgICAgICByZXNwb25zZS5zZW5kKHJlc3VsdC5yb3dzKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuIl19